name: Python package

on:
  push:
    branches: [ "main" ]
    paths-ignore:
      - 'docs/**'
  pull_request:
    branches: [ "main" ]
    paths-ignore:
      - 'docs/**'
jobs:
  build:

    strategy:
      matrix:
        python-version: [ "3.10" ] #, "3.11", "3.12" ]
        os: [ "ubuntu-latest" ]
      fail-fast: false
    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Load cached Poetry installation
        id: cached-poetry
        uses: actions/cache@v4
        with:
          path: ~/.local  # the path depends on the OS
          key: poetry-1  # increment to reset cache

      - name: Install Poetry
        if: steps.cached-poetry.outputs.cache-hit != 'true'
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true

      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v4
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-v2-${{ hashFiles('**/poetry.lock') }}

      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-root
        
      - name: Install project
        run: poetry install --extras "dev" --no-interaction

      - name: Checks with pre-commit
        run: poetry run pre-commit run --all-files

      - name: Run tests
        run: poetry run pytest